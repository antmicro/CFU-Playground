name: Test projects
on:
  #  push:
  #    paths-ignore:
  #      - 'docs/**'
  #      - 'README.md'
  #      - 'LICENSE'
  #      - 'CONTRIBUTING.md'
  #      - 'CODE_OF_CONDUCT.md'
  #      - 'AUTHORS'
  pull_request:
    paths-ignore:
      - 'docs/**'
      - 'README.md'
      - 'LICENSE'
      - 'CONTRIBUTING.md'
      - 'CODE_OF_CONDUCT.md'
      - 'AUTHORS'
  workflow_dispatch:
    paths-ignore:
      - 'docs/**'
      - 'README.md'
      - 'LICENSE'
      - 'CONTRIBUTING.md'
      - 'CODE_OF_CONDUCT.md'
      - 'AUTHORS'
jobs:
  setup-matrix:
    runs-on: ubuntu-20.04
    outputs:
      matrix-combinations: ${{ steps.setup-matrix-combinations.outputs.matrix-combinations }}

    steps:
    - name: Clone repository
      uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.7'

    - name: Setup matrix combinations
      id: setup-matrix-combinations
      run: |
        export MATRIX_PARAMS=$(./.github/scripts/generate_ci_matrix.py)
        echo "::set-output name=matrix-combinations::{\"include\":$MATRIX_PARAMS}"

    - name: Setup environment
      run: |
        echo "RENODE_VERSION=$(cat conf/renode.version)" >> $GITHUB_ENV
        echo "RENODE_DIR=third_party/renode" >> $GITHUB_ENV

    - name: Download Renode
      uses: antmicro/renode-test-action@v2.0.0
      with:
        renode-version: '${{ env.RENODE_VERSION }}'
        renode-path: '${{ env.RENODE_DIR }}'

    - name: Cache Renode installation
      uses: actions/cache@v2
      id: cache-renode
      with:
        path: '${{ env.RENODE_DIR }}'
        key: cfu-cache-renode-${{ env.RENODE_VERSION }}

  test-projects:
    runs-on: ubuntu-20.04
    continue-on-error: True
    needs: setup-matrix
    strategy:
      matrix: ${{ fromJson(needs.setup-matrix.outputs.matrix-combinations) }}

    steps:
    - name: Fetch toolchain
      run: |
        wget --progress=dot:giga -O- https://static.dev.sifive.com/dev-tools/riscv64-unknown-elf-gcc-8.3.0-2020.04.1-x86_64-linux-ubuntu14.tar.gz | tar -xzC /opt
        echo "/opt/riscv64-unknown-elf-gcc-8.3.0-2020.04.1-x86_64-linux-ubuntu14/bin" >> $GITHUB_PATH

    - name: Clone repository
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.7'

    - name: Prepare Renode version
      run: |
        echo "RENODE_VERSION=$(cat conf/renode.version)" >> $GITHUB_ENV
        echo "RENODE_DIR=third_party/renode" >> $GITHUB_ENV

    - name: Restore Renode
      uses: actions/cache@v2
      id: cache-renode
      with:
        path: '${{ env.RENODE_DIR }}'
        key: cfu-cache-renode-${{ env.RENODE_VERSION }}

    - name: Setup environment
      run: |
        bash scripts/setup -ci

    - name: Build sample & generate Renode scripts
      run:
        pwd && source environment && cd proj/${{ matrix.proj_name }} &&
        make ${{ matrix.build_params }} PLATFORM=${{ matrix.platform }} TARGET=${{ matrix.target }} -j8 software &&
        make renode-scripts ${{ matrix.build_params }} PLATFORM=${{ matrix.platform }} TARGET=${{ matrix.target }}

    - name: Run tests
      timeout-minutes: 15
      uses: antmicro/renode-test-action@v2.0.0
      with:
        renode-version: '${{ env.RENODE_VERSION }}'
        tests-to-run: proj/${{ matrix.proj_name }}/build/renode/${{ matrix.target }}.robot
        renode-path: '${{ env.RENODE_DIR }}'

    - name: Archive results
      if: ${{ success() || failure() }}
      uses: actions/upload-artifact@v2
      with:
        name: test-results-${{ matrix.proj_name }}-${{ matrix.platform }}-${{ matrix.target }}
        path: |
          report.html
          log.html
          robot_output.xml
          snapshots
